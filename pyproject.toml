[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "raybox"
version = "0.1.0"
description = "AI Sandbox environment orchestration with Ray"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "anthropic>=0.69.0",
    "requests>=2.32.0",
    "litellm>=1.77.7",
    "docker>=7.0.0",
    "python-dotenv>=1.1.1",
    "ray[serve]>=2.49.2",
    "smolagents[openai,toolkit]>=1.22.0",
    "asyncpg>=0.29.0",
    "sqlalchemy[asyncio]>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "mypy>=1.13.0",
    "types-requests>=2.32.0",
    "asyncpg-stubs>=0.29.0",
    "black>=25.1.0",
    "ruff>=0.11.0",
]

[project.scripts]
raybox = "raybox.sdk.python.cli:main"
raybox-server = "ee.raybox.api.cli:main"

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # ignore unused imports in __init__.py

[tool.ruff.lint.isort]
known-first-party = ["raybox"]

[tool.setuptools]
package-dir = {"raybox" = "src/raybox", "ee" = "ee"}

[tool.setuptools.packages.find]
include = ["raybox*", "ee*"]

[dependency-groups]
dev = [
    "pre-commit>=4.3.0",
]
